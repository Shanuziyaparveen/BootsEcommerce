<%- include("../../views/partials/user/header") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f5f5f5;
    }
    a {
        text-decoration: none;
        color: #007bff;
    }
    .product-list h2 {
        margin-top: 20px;
        font-weight: 700;
        text-align: center;
    }

    .product-card {
        position: relative;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
    }

    .product-card img {
        width: 100%;
        height: 250px;
        object-fit: cover;
    }

    .product-content {
        padding: 15px;
    }

    .product-content h6 {
        font-size: 1rem;
        font-weight: 600;
        margin-bottom: 5px;
        color: #333;
        text-align: left;
    }

    .product-content .price {
        display: flex;
        align-items: center;
        justify-content: space-between;
        font-size: 1.1rem;
        margin-bottom: 10px;
    }

    .product-content .sale-price {
        color: #ff4c4c;
        font-weight: bold;
    }

    .product-content .regular-price {
        color: #888;
        text-decoration: line-through;
        font-size: 0.9rem;
    }

    .btn-container {
        display: flex;
        gap: 10px;
        justify-content: space-between;
    }

    .btn {
        border-radius: 8px;
        padding: 10px 12px;
        width: 48%;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.2s ease;
    }

    .btn.add-to-cart-btn {
        background-color: #007bff;
        color: white;
    }

    .btn.add-to-cart-btn:hover {
        background-color: #0056b3;
    }

    .btn.add-to-wishlist-btn {
        background-color: white;
        color: #ff6b6b;
        border: 1px solid #ff6b6b;
    }

    .btn.add-to-wishlist-btn:hover {
        background-color: #ff6b6b;
        color: white;
    }

    .out-of-stock {
        font-size: 0.95rem;
        color: red;
        font-weight: bold;
        text-align: center;
        margin-top: 10px;
    }
</style>

<div class="container product-list">
    <h2>Our Products</h2>
    <div class="row g-3 mt-3">
        <% products.forEach(product => { %>
            <div class="col-lg-3 col-md-4 col-sm-6 col-12">
                <div class="product-card">
                    <a href="/product/<%= product._id %>">
                        <img src="/uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                    </a>
                    <div class="product-content">
                        <h6><%= product.productName %></h6>
                        <div class="price">
                            <% if (product.salePrice && product.salePrice < product.regularPrice) { %>
                                <span class="sale-price">₹<%= product.salePrice %></span>
                                <span class="regular-price">₹<%= product.regularPrice %></span>
                            <% } else { %>
                                <span>₹<%= product.regularPrice %></span>
                            <% } %>
                        </div>
                        <div class="btn-container">
                            <% if (product.outOfStock) { %>
                                <p class="out-of-stock">Out of Stock</p>
                            <% } else { %>
                                <button class="btn add-to-cart-btn" onclick="addToCart('<%= product._id %>')">
                                    <i class="fas fa-cart-plus me-2"></i>Add to Cart
                                </button>
                            <% } %>
                            <button class="btn add-to-wishlist-btn" onclick="<%= product.isInWishlist ? `removeFromWishList('${product._id}')` : `addToWishList('${product._id}')` %>">
                                <i class="<%= product.isInWishlist ? 'fas fa-heart' : 'far fa-heart' %> me-2"></i> Wishlist
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        <% }) %>
    </div>
</div>

<%- include("../../views/partials/user/footer") %>

<script>
// Check if the user is logged in
const isLoggedIn = <%= user ? 'true' : 'false' %>;
function addToCart(productId) {
    if (!isLoggedIn) {
        Swal.fire({
            title: 'Login required!',
            text: 'You need to be logged in to add products to your cart.',
            icon: 'warning',
            confirmButtonText: 'Login'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/login';
            }
        });
        return;
    }

    $.ajax({
        type: 'POST',
        url: '/addToCart',
        contentType: 'application/json', // Set content type to JSON
        data: JSON.stringify({ productId: productId }), // Send the data as JSON
        success: function(response) {
            if (response.success) {
                // If the product was added to the cart successfully
                Swal.fire({
                    title: 'Product added to cart!',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                // Handle specific errors like out of stock
                Swal.fire({
                    title: 'Out of Stock!',
                    text: response.message || 'Sorry, this product is currently out of stock.',
                    icon: 'error',
                    confirmButtonText: 'Okay'
                });
            }
        },
        error: function(error) {
            // General error handling
            Swal.fire({
                title: 'Error',
                text: 'Could not add product to cart. Please try again.',
                icon: 'error',
                confirmButtonText: 'Okay'
            });
        }
    });
}
function addToWishList(productId) {
  // Send an AJAX request to the server to add the product to the user's wishlist
  fetch(`/addTowishList`, { // Updated URL to match POST route
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      // Add authorization headers if needed, such as JWT token
    },
    body: JSON.stringify({ productId }) // Send product ID as part of the request body
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      
      // Success message with SweetAlert
      Swal.fire({
        icon: 'success',
        title: 'Added to Wishlist!',
        text: 'The product has been added to your wishlist.',
        showConfirmButton: false,
        timer: 1500
      }).then(() => {
                // Optionally, reload the page after user confirms SweetAlert
                location.reload();
            });
    } else {
      // Error message with SweetAlert
      Swal.fire({
        icon: 'error',
        title: 'Oops!',
        text: data.message || 'Failed to add to wishlist.',
        showConfirmButton: true
      });
    }
  })
  .catch(error => {
    console.error('Error:', error);
    // Show error message using SweetAlert
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'There was an error processing your request.',
      showConfirmButton: true
    });
  });
}
// Remove product from wishlist
function removeFromWishList(productId) {
    fetch(`/deleteProduct/${productId}`, {
        method: 'POST',  // Ensure the method is POST
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId })  // Send the productId in the body
    })
    .then(response => response.json())  // Convert response to JSON
    .then(data => {
        if (data.success) {
            // If the removal is successful, show a success message with SweetAlert
            Swal.fire({
                title: 'Removed from Wishlist',
                text: 'The product has been removed from your wishlist.',
                icon: 'success',
                confirmButtonText: 'Okay'
            }).then(() => {
                // Optionally, reload the page after user confirms SweetAlert
                location.reload();
            });
        } else {
            // If failed, show an error message
            Swal.fire({
                title: 'Error',
                text: data.message || 'Something went wrong. Please try again later.',
                icon: 'error',
                confirmButtonText: 'Okay'
            });
        }
    })
    .catch(err => {
        console.error("Error removing from wishlist", err);
        // Show error message if something goes wrong
        Swal.fire({
            title: 'Error',
            text: 'An unexpected error occurred. Please try again.',
            icon: 'error',
            confirmButtonText: 'Okay'
        });
    });
}

</script>
