
<style>
 /* General Page Styles */
body {
  font-family: 'Arial', sans-serif;
  background-color: #2b1a47; /* Dark Purple Background */
  color: #f0f1f6; /* Light text for readability */
  margin: 0;
  padding: 0;
}

/* Page Header */
.page-header {
  background-color: #3d2c6e; /* Lighter purple */
  padding: 20px 0;
}

.page-header .breadcrumb {
  display: flex;
  justify-content: center;
  gap: 10px;
}

.page-header .breadcrumb a {
  color: #f0f1f6;
  text-decoration: none;
  font-size: 16px;
  transition: color 0.3s;
}

.page-header .breadcrumb a:hover {
  color: #b3a0d4; /* Soft lavender color */
}

.page-header .breadcrumb span {
  color: #b3a0d4; /* Soft lavender color */
}

/* Product Details Section */
.product-details {
  display: flex;
  flex-wrap: wrap;
  gap: 30px;
  padding: 40px 10%;
  background-color: #3c2a56; /* Darker shade for content section */
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
}

/* Image Section */
.image-section {
  width: 40%;
}

.main-image-container {
  width: 100%;
  position: relative;
}

.main-image-container img {
  width: 100%;
  border-radius: 10px;
  transition: transform 0.3s ease-in-out;
}

/* Thumbnails Container */
.thumbnails-container {
  display: flex;
  gap: 10px;
  margin-top: 10px;
  justify-content: center;
}

.thumbnail {
  width: 60px;
  height: 60px;
  object-fit: cover;
  border-radius: 5px;
  cursor: pointer;
  transition: opacity 0.3s;
}

.thumbnail:hover {
  opacity: 0.7;
}

/* Details Section */
.details-section {
  flex: 1;
  color: #f0f1f6;
}

.details-section h1 {
  font-size: 2.5rem;
  margin-bottom: 20px;
  color: #fff;
}

.price {
  font-size: 1.8rem;
  color: #e0c2f1; /* Light lavender color */
}

.original-price {
  text-decoration: line-through;
  color: #b3a0d4;
}

.coupon {
  background-color: #5a3e85; /* Light purple background */
  padding: 5px 10px;
  border-radius: 5px;
  font-size: 1.2rem;
  margin-top: 10px;
}

.rating {
  font-size: 1.2rem;
  margin-top: 10px;
}

.stock {
  margin-top: 10px;
  font-size: 1.2rem;
}

.in-stock {
  color: #4caf50;
}

.out-of-stock {
  color: #e74c3c;
}

h3 {
  margin-top: 30px;
  font-size: 1.8rem;
  color: #e0c2f1;
  border-bottom: 2px solid #5a3e85;
  padding-bottom: 10px;
}

/* Product Highlights */
ul {
  list-style: none;
  padding: 0;
}

ul li {
  font-size: 1.2rem;
  margin-bottom: 10px;
}

/* Reviews Section */
.reviews p {
  font-size: 1rem;
  margin-bottom: 10px;
}

.reviews strong {
  color: #b3a0d4;
}

/* Add to Cart Button */
.add-to-cart-btn {
  background-color: #6a4c9c;
  color: #fff;
  border: none;
  padding: 15px 30px;
  border-radius: 5px;
  font-size: 1.2rem;
  cursor: pointer;
  margin-top: 20px;
  transition: background-color 0.3s;
}

.add-to-cart-btn:hover {
  background-color: #5a3e85; /* Hover effect */
}

/* Related Products Section */
.related-products {
  display: flex;
  gap: 20px;
  margin-top: 30px;
  flex-wrap: wrap;
}

.related-product-card {
  width: 200px;
  background-color: #3d2c6e;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
  text-align: center;
  transition: transform 0.3s ease;
}

.related-product-card:hover {
  transform: translateY(-5px);
}

.related-product-card img {
  width: 100%;
  border-radius: 5px;
}

.related-product-card h4 {
  font-size: 1.2rem;
  color: #fff;
  margin: 10px 0;
}

.related-product-card p {
  color: #b3a0d4;
  font-size: 1.1rem;
}

/* Footer Styles */
footer {
  background-color: #3d2c6e;
  padding: 20px;
  text-align: center;
  color: #f3f4f6;
}

/* Image Zoom Effect */
.main-image-container img {
  transition: transform 0.3s ease-in-out;
}

.main-image-container img:hover {
  transform: scale(1.1);
}
/* Review Section */
.leave-review-section {
  background-color: #f9f9f9; /* Light background for the review section */
  padding: 30px;
  border-radius: 8px;
  margin-top: 30px;
}

.leave-review-section h4 {
  font-size: 1.8rem;
  color: #333;
}

.leave-review-section small {
  color: #888;
}

.star-rating {
  font-size: 1.5rem;
  color: #f0f1f6;
}

.star-rating .fa-star {
  cursor: pointer;
  transition: color 0.3s;
}

.star-rating .fa-star:hover,
.star-rating .fa-star.selected {
  color: #ffdd00; /* Yellow color when selected */
}

.review-form {
  margin-top: 20px;
}

.review-form .form-group {
  margin-bottom: 15px;
}

.review-form label {
  font-size: 1.1rem;
  color: #333;
}

.review-form textarea,
.review-form input {
  background-color: #f1f1f1;
  color: #333;
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 10px;
  font-size: 1rem;
  width: 100%;
}

.review-form textarea::placeholder,
.review-form input::placeholder {
  color: #888;
}

.review-form button {
  background-color: #007bff;
  color: #fff;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  font-size: 1.2rem;
  cursor: pointer;
}

.review-form button:hover {
  background-color: #0056b3;
}



</style>


<main class="main">
  <div class="container">
    <div class="page-header breadcrumb-wrap">
      <div class="breadcrumb">
        <a href="/" rel="nofollow">Home</a>
        <span>&gt;</span>
        <a href="/Wishlist" rel="nofollow">Wishlist</a>
        <span>&gt;</span>
        <a href="/cart" rel="nofollow">Cart</a>
      </div>
    </div>
 <section>
  <div class="product-details">
  <!-- Image Section -->
  <div class="image-section">
    <!-- Main Image -->
    <div class="main-image-container">
      <img id="main-image" src="<%= product.productImage.length > 0 ? '/uploads/product-images/' + product.productImage[0] : '/uploads/product-images/default-thumbnail.jpg' %>" alt="<%= product.productName %>" />
    </div>

    <!-- Thumbnails -->
    <div class="thumbnails-container">
      <% if (Array.isArray(product.productImage) && product.productImage.length > 0) { %>
        <% product.productImage.forEach(img => { %>
          <img class="thumbnail" src="/uploads/product-images/<%= img || 'default-thumbnail.jpg' %>" alt="Thumbnail"
          onclick="document.getElementById('main-image').src='/uploads/product-images/<%= img || 'default-thumbnail.jpg' %>'" />
        <% }) %>
      <% } else { %>
        <p>No images available</p>
      <% } %>
    </div>
  </div>
</div>
  
    <!-- Details Section -->
    <div class="details-section">
      <h1><%= product.productName %></h1>
  
      <!-- Price -->
      <p class="price">
        ₹<%= product.salePrice %>
        <% if (product.regularPrice > product.salePrice) { %>
          <span class="original-price">₹<%= product.regularPrice %></span>
        <% } %>
      </p>
  
      <!-- Discount Coupon -->
      <% if (product.coupon) { %>
        <p class="coupon">Discount: <%= product.coupon %></p>
      <% } %>
      <div class="product_sort_info font-xs mb-30">
        <ul>
            <li class="mb-10"><i class="fi-rs-crown mr-5"></i> 1 Year Brand Warranty</li>
            <li class="mb-10"><i class="fi-rs-refresh mr-5"></i> 30 Day Return Policy</li>
            <li><i class="fi-rs-credit-card mr-5"></i> Cash on Delivery available</li>
        </ul>
    </div>
      <!-- Rating -->
      <p class="rating">Rating: <%= product.rating %> ⭐</p>
  
      <!-- Stock Availability -->
      <p class="stock">
        <% if (product.quantity > 0) { %>
          <span class="in-stock">In Stock</span>
        <% } else { %>
          <span class="out-of-stock">Out of Stock</span>
        <% } %>
      </p>
  
      <!-- Product Highlights -->
      <h3>Product Highlights</h3>
      <ul>
        <li><%= product.description %></li>
      </ul>
  
      <!-- Reviews -->
      <h3>Reviews</h3>
      <div class="reviews">
        <% if (product.reviews && product.reviews.length > 0) { %>
          <% product.reviews.forEach(review => { %>
            <p><strong><%= review.user %></strong>: <%= review.comment %></p>
          <% }) %>
        <% } else { %>
          <p>No reviews yet.</p>
        <% } %>
      </div>
  
      <!-- Add to Cart Button -->
      <div>
        <% if (product.quantity === 0) { %>
          <p class="out-of-stock">Out of Stock</p>
        <% } else { %>
          <p class="in-stock">In Stock</p>
          <button   
          data-product-id="<%= product._id %>" class="add-to-cart-btn" onclick="addToCart('<%= product._id %>')">Add to Cart</button>
        <% } %>
      </div>
  
      <!-- Related Products Section -->
      <h3>Related Products</h3>
      <div class="related-products">
        <% if (relatedProducts && relatedProducts.length > 0) { %>
          <% relatedProducts.forEach(related => { %>
            <div class="related-product-card">
              <a href="/product/<%= related._id %>">
                <img src="<%= related.productImage[0] %>" alt="<%= related.productName %>" />
                <h4><%= related.productName %></h4>
                <p>₹<%= related.salePrice %></p>
              </a>
            </div>
          <% }) %>
        <% } else { %>
          <p>No related products found.</p>
        <% } %>
      </div>
    </div>
  
  </div>
  <!-- Review Tab -->
<div class="tab-pane fade" id="tab-pane-3">
  <div class="row">
    <!-- Displaying Existing Reviews -->
    <div class="col-md-6">
      <h4 class="mb-4">1 review for "Colorful Stylish Shoes"</h4>
      <div class="media mb-4">
        <img src="/user.jpg" alt="Image" class="img-fluid mr-3 mt-1" style="width: 45px;">
        <div class="media-body">
          <h6>John Doe<small> - <i>01 Jan 2045</i></small></h6>
          <div class="text-primary mb-2">
            <i class="fas fa-star"></i>
            <i class="fas fa-star"></i>
            <i class="fas fa-star"></i>
            <i class="fas fa-star-half-alt"></i>
            <i class="far fa-star"></i>
          </div>
          <p>Diam amet duo labore stet elitr ea clita ipsum, tempor labore accusam ipsum et no at. Kasd diam tempor rebum magna dolores sed sed eirmod ipsum.</p>
        </div>
      </div>
    </div>

    <!-- Review Form Section -->
    <div class="col-md-6">
      <h4 class="mb-4">Leave a review</h4>
      <small>Your email address will not be published. Required fields are marked *</small>
      <div class="d-flex my-3">
        <p class="mb-0 mr-2">Your Rating * :</p>
        <div class="text-primary" id="star-rating">
          <i class="far fa-star"></i>
          <i class="far fa-star"></i>
          <i class="far fa-star"></i>
          <i class="far fa-star"></i>
          <i class="far fa-star"></i>
        </div>
      </div>
      
      <!-- Review Form -->
      <form method="POST" action="/submit-review/<%= product._id %>" class="review-form">
        <div class="form-group">
          <label for="message">Your Review *</label>
          <textarea id="message" name="comment" cols="30" rows="5" class="form-control" required></textarea>
        </div>
        <div class="form-group">
          <label for="name">Your Name *</label>
          <input type="text" class="form-control" id="name" name="user" required>
        </div>
        <div class="form-group">
          <label for="email">Your Email *</label>
          <input type="email" class="form-control" id="email" name="email" required>
        </div>
        <div class="form-group mb-0">
          <input type="submit" value="Leave Your Review" class="btn btn-primary px-3">
        </div>
      </form>
    </div>
  </div>
</div>

</section>
 
    <%- include("../../views/partials/user/footer") %>

  <!-- JavaScript for Image Zoom -->
  <script>
   const mainImage = document.getElementById('main-image');
  
  // Add zoom effect when hovering over the image
  mainImage.addEventListener('mousemove', function (e) {
    const zoomLevel = 2;
    const rect = e.target.getBoundingClientRect();
    const x = ((e.clientX - rect.left) / rect.width) * 100;
    const y = ((e.clientY - rect.top) / rect.height) * 100;
    e.target.style.transform = `scale(${zoomLevel})`;
    e.target.style.transformOrigin = `${x}% ${y}%`;
  });

  // Reset zoom when mouse leaves the image
  mainImage.addEventListener('mouseleave', function () {
    this.style.transform = 'scale(1)';
    this.style.transformOrigin = 'center';
  });

  
  // Get all the stars
  const stars = document.querySelectorAll('#star-rating .fa-star');
  
  // Handle click events on stars
  stars.forEach(star => {
    star.addEventListener('click', () => {
      const rating = star.getAttribute('data-rating') || stars.indexOf(star) + 1;
      
      // Remove 'selected' class from all stars
      stars.forEach(s => s.classList.remove('selected'));
      
      // Add 'selected' class to clicked star and all stars before it
      for (let i = 0; i < rating; i++) {
        stars[i].classList.add('selected');
      }
      
      // Optionally, save the rating in a hidden input field (or handle it on form submission)
      document.getElementById('rating-value').value = rating;
    });
  });
  document.addEventListener('DOMContentLoaded', () => {
    const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');

    addToCartButtons.forEach(button => {
        button.addEventListener('click', async () => {
            const productId = button.getAttribute('data-product-id');
            const isLoggedIn = <%= user ? 'true' : 'false' %>; // Check if the user is logged in

            if (!isLoggedIn) {
                Swal.fire({
                    title: 'Login required!',
                    text: 'You need to be logged in to add products to your cart.',
                    icon: 'warning',
                    confirmButtonText: 'Login'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/login';
                    }
                });
                return;
            }

            try {
                const response = await fetch('/addToCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId }),
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    Swal.fire({
                        title: 'Product added to cart!',
                        icon: 'success',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    // Optionally update cart count
                    if (result.cartCount !== undefined) {
                        const cartCountElement = document.getElementById('cartCount');
                        if (cartCountElement) {
                            cartCountElement.textContent = result.cartCount;
                        }
                    }
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: result.message || 'Unable to add product to the cart.',
                        icon: 'error',
                        confirmButtonText: 'Okay'
                    });
                }
            } catch (error) {
                console.error('Error adding to cart:', error);
                Swal.fire({
                    title: 'Error',
                    text: 'An unexpected error occurred. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'Okay'
                });
            }
        });
    });
});


</script>


  



</html>



